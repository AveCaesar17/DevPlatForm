---
- name: Creates directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/home/{{ ansible_user }}/onedev"
    - "/home/{{ ansible_user }}/onedev/state"
    - "/home/{{ ansible_user }}/onedev/ssl"
    - "/home/{{ ansible_user }}/onedev/conf"
- name: copy config files
  template: 
      src: "{{ item.name }}"
      dest: "{{ item.dest }}"
  loop:
      - { name: 'docker-compose.yaml_onedev.j2' ,
          dest: '/home/{{ ansible_user }}/onedev/docker-compose.yaml' 
        }
      - { name: 'nginx.conf.j2' ,
          dest: '/etc/nginx/conf.d/{{ onedev.domen }}.conf_ssl' 
        }
      - { name: 'conf.d.j2' ,
          dest: '/etc/nginx/conf.d/{{ onedev.domen }}.conf' 
        }
- name: Install OneDev
  shell: 
    cmd: docker-compose -f /home/{{ ansible_user }}/onedev/docker-compose.yaml up --build -d

- name: Start certbot
  shell:
      cmd: "{{ item }}"
  loop:
      - nginx -t && nginx -s reload
      - certbot --nginx -d {{ onedev.domen }} -m {{ onedev.email }} --non-interactive --agree-tos
- name: re
  shell:
      cmd: "sed -i '1,13 s#}#include /etc/nginx/conf.d/{{ onedev.domen }}.conf_ssl; }#' /etc/nginx/conf.d/{{ onedev.domen }}.conf"
- name: Enable service httpd and ensure it is not masked
  ansible.builtin.systemd:
      name: nginx
      enabled: yes  
      state: restarted












